const t=JSON.parse('{"key":"v-10d3c662","path":"/posts/2023-11-05-git-guide-graph-tool.html","title":"git 经验谈（二）：可视化辅助工具","lang":"en-US","frontmatter":{"title":"git 经验谈（二）：可视化辅助工具","date":"2023-11-05T00:00:00.000Z","tag":["git","项目管理","版本管理"],"description":"这篇文章是 git 系列第二篇，想介绍一下结合可视化工具使用 git 的经验。可视化工具多种多样，我自己常用的是 Github Desktop，文章中也会介绍一下 Sourcetree。 用命令行还是可视化辅助工具？ 命令行是 git 原生的使用方式，所以我们学习 git 时要通过命令行来理解 git 工作的方式。在使用可视化工具时，一定要清楚工具中所做的操作实际上是运行了哪些命令。建议使用 Sourcetree 的同学留意一下 \\"Always display full console output\\" 这个选项（在 Tools -&gt; Options -&gt; General -&gt; Repo Settings 选项里），开启它可以在每次执行 git 操作时展示对应的命令。使用时如下图：","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://rushingfly.github.io/zh/posts/2023-11-05-git-guide-graph-tool.html"}],["meta",{"property":"og:url","content":"https://rushingfly.github.io/posts/2023-11-05-git-guide-graph-tool.html"}],["meta",{"property":"og:site_name","content":"因纽特猎人Blog"}],["meta",{"property":"og:title","content":"git 经验谈（二）：可视化辅助工具"}],["meta",{"property":"og:description","content":"这篇文章是 git 系列第二篇，想介绍一下结合可视化工具使用 git 的经验。可视化工具多种多样，我自己常用的是 Github Desktop，文章中也会介绍一下 Sourcetree。 用命令行还是可视化辅助工具？ 命令行是 git 原生的使用方式，所以我们学习 git 时要通过命令行来理解 git 工作的方式。在使用可视化工具时，一定要清楚工具中所做的操作实际上是运行了哪些命令。建议使用 Sourcetree 的同学留意一下 \\"Always display full console output\\" 这个选项（在 Tools -&gt; Options -&gt; General -&gt; Repo Settings 选项里），开启它可以在每次执行 git 操作时展示对应的命令。使用时如下图："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-24T04:03:06.000Z"}],["meta",{"property":"article:author","content":"因纽特猎人"}],["meta",{"property":"article:tag","content":"git"}],["meta",{"property":"article:tag","content":"项目管理"}],["meta",{"property":"article:tag","content":"版本管理"}],["meta",{"property":"article:published_time","content":"2023-11-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-24T04:03:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"git 经验谈（二）：可视化辅助工具\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-11-05T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-24T04:03:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"因纽特猎人\\",\\"url\\":\\"https://rushingfly.github.io\\"}]}"]]},"headers":[{"level":3,"title":"用命令行还是可视化辅助工具？","slug":"用命令行还是可视化辅助工具","link":"#用命令行还是可视化辅助工具","children":[]},{"level":3,"title":"Github Desktop 和 Sourcetree 的对比","slug":"github-desktop-和-sourcetree-的对比","link":"#github-desktop-和-sourcetree-的对比","children":[]}],"git":{"createdTime":1716523386000,"updatedTime":1716523386000,"contributors":[{"name":"Charles","email":"wangch2204@hotmail.com","commits":1}]},"readingTime":{"minutes":2.79,"words":836},"filePathRelative":"posts/2023-11-05-git-guide-graph-tool.md","localizedDate":"November 5, 2023","excerpt":"<p>这篇文章是 git 系列第二篇，想介绍一下结合可视化工具使用 git 的经验。可视化工具多种多样，我自己常用的是 <a href=\\"https://desktop.github.com/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Github Desktop</a>，文章中也会介绍一下 <a href=\\"https://www.sourcetreeapp.com/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Sourcetree</a>。</p>\\n<h3> 用命令行还是可视化辅助工具？</h3>\\n<p>命令行是 git 原生的使用方式，所以我们学习 git 时要通过命令行来理解 git 工作的方式。在使用可视化工具时，一定要清楚工具中所做的操作实际上是运行了哪些命令。建议使用 Sourcetree 的同学留意一下 \\"Always display full console output\\" 这个选项（在 Tools -&gt; Options -&gt; General -&gt; Repo Settings 选项里），开启它可以在每次执行 git 操作时展示对应的命令。使用时如下图：</p>","autoDesc":true}');export{t as data};
